name: TreePPL CI

on:
  workflow_dispatch:
  pull_request:
    branches:
      - '**'
    types: [opened, reopened, synchronize]

jobs:
  build-and-test-linux:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
        with:
          repository: 'treeppl/treeppl'
          path: 'treeppl'
          # Clones the TreePPL repository into 'treeppl' directory

      - uses: actions/checkout@v3
        with:
          repository: 'vsenderov/miking'
          ref: 'develop'
          path: 'miking'
          # Clones the Miking repository's develop branch into 'miking' directory

      - uses: actions/checkout@v3
        with:
          repository: 'vsenderov/miking-dppl'
          ref: 'master'
          path: 'miking-dppl'
          # Clones the Miking DPPL repository's develop branch into 'miking-dppl' directory

      - name: Setup OCaml and OPAM for Miking
        uses: ocaml/setup-ocaml@v2
        with:
          ocaml-compiler: ocaml-base-compiler.5.0.0

      - name: Cache opam packages
        uses: actions/cache@v3
        with:
          path: ~/.opam
          key: ${{ runner.os }}-opam-${{ hashFiles('**/opam') }}

      - name: Install system dependencies for Miking
        run: |
          sudo apt-get update
          sudo apt-get install -y liblapacke-dev libopenblas-dev
          # Adds system dependencies required by Miking

      - name: Build and Install Miking
        run: |
          cd miking
          eval $(opam env)
          make install
          echo "MCORE_LIBS=stdlib=${{ github.workspace }}/miking/stdlib" >> $GITHUB_ENV

      - name: Build and Install Miking-DPPL
        run: |
          cd miking-dppl
          eval $(opam env)
          make install
          # Extend MCORE_LIBS with the coreppl path
          echo "MCORE_LIBS=${MCORE_LIBS}:coreppl=${{ github.workspace }}/miking-dppl/coreppl" >> $GITHUB_ENV
          echo "PATH=$PATH:${{ github.workspace }}/miking-dppl/.local/bin" >> $GITHUB_ENV  

      - name: Build TreePPL
        run: |
          cd treeppl
          make install

      - name: Run TreePPL tests
        run: |
          cd treeppl
          make test

  # Assuming similar setup is needed for macOS, replicate the steps with necessary adjustments for macOS environment
